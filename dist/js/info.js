!function o(i,u,c){function s(t,e){if(!u[t]){if(!i[t]){var n="function"==typeof require&&require;if(!e&&n)return n(t,!0);if(l)return l(t,!0);var r=new Error("Cannot find module '"+t+"'");throw r.code="MODULE_NOT_FOUND",r}var a=u[t]={exports:{}};i[t][0].call(a.exports,function(e){return s(i[t][1][e]||e)},a,a.exports,o,i,u,c)}return u[t].exports}for(var l="function"==typeof require&&require,e=0;e<c.length;e++)s(c[e]);return s}({1:[function(e,t,n){"use strict";var r=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}();var a=e("idb"),o=function(){function i(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i)}return r(i,null,[{key:"openDatabase",value:function(){return navigator.serviceWorker?a.open("restaurant",2,function(e){switch(e.oldVersion){case 0:e.createObjectStore("restaurants",{keyPath:"id"}).createIndex("by-date","time");case 1:e.createObjectStore("reviews",{keyPath:"id"}).createIndex("resaurant","restaurant_id")}}):Promise.resolve()}},{key:"fetchRestaurants",value:function(t){i.showCachedRestaurants(t).then(function(){fetch(i.DATABASE_URL).then(function(e){return e.json()}).then(function(n){return i.openDatabase().then(function(e){if(e){var t=e.transaction("restaurants","readwrite").objectStore("restaurants");n.forEach(function(e){t.put(e)})}}),t(null,n)}).catch(function(e){return t(e,null)})})}},{key:"showCachedRestaurants",value:function(t){return i.openDatabase().then(function(e){if(e)return e.transaction("restaurants").objectStore("restaurants").getAll().then(function(e){t(null,e)})})}},{key:"showCachedRestaurant",value:function(t){return i.openDatabase().then(function(e){if(e)return e.transaction("restaurants").objectStore("restaurants").getAll().then(function(e){return e.filter(function(e){return e.id==t})[0]})})}},{key:"showCachedReviews",value:function(t){return i.openDatabase().then(function(e){if(e)return e.transaction("reviews").objectStore("reviews").getAll().then(function(e){return e.filter(function(e){return e.restaurant_id==t})})})}},{key:"fetchRestaurantById",value:function(t,n){fetch(i.DATABASE_URL+"/"+t).then(function(e){return e.json()}).then(function(t){if(i.openDatabase().then(function(e){e&&e.transaction("restaurants","readwrite").objectStore("restaurants").put(t)}),t)return n(null,t)}).catch(function(e){i.showCachedRestaurant(t).then(function(e){return n(null,e)})})}},{key:"fetchRestaurantReviews",value:function(t){return fetch("http://localhost:1337/reviews/?restaurant_id="+t).then(function(e){return e.json()}).then(function(n){return i.openDatabase().then(function(e){if(e){var t=e.transaction("reviews","readwrite").objectStore("reviews");Array.isArray(n)?n.forEach(function(e){t.put(e)}):t.put(n)}}),Promise.resolve(n)}).catch(function(e){return i.showCachedReviews(t).then(function(e){return Promise.resolve(e)})})}},{key:"fetchRestaurantByCuisine",value:function(r,a){i.fetchRestaurants(function(e,t){if(e)a(e,null);else{var n=t.filter(function(e){return e.cuisine_type==r});a(null,n)}})}},{key:"fetchRestaurantByNeighborhood",value:function(r,a){i.fetchRestaurants(function(e,t){if(e)a(e,null);else{var n=t.filter(function(e){return e.neighborhood==r});a(null,n)}})}},{key:"fetchRestaurantByCuisineAndNeighborhood",value:function(r,a,o){i.fetchRestaurants(function(e,t){if(e)o(e,null);else{var n=t;"all"!=r&&(n=n.filter(function(e){return e.cuisine_type==r})),"all"!=a&&(n=n.filter(function(e){return e.neighborhood==a})),o(null,n)}})}},{key:"fetchNeighborhoods",value:function(a){i.fetchRestaurants(function(e,n){if(e)a(e,null);else{var r=n.map(function(e,t){return n[t].neighborhood}),t=r.filter(function(e,t){return r.indexOf(e)==t});a(null,t)}})}},{key:"fetchCuisines",value:function(a){i.fetchRestaurants(function(e,n){if(e)a(e,null);else{var r=n.map(function(e,t){return n[t].cuisine_type}),t=r.filter(function(e,t){return r.indexOf(e)==t});a(null,t)}})}},{key:"urlForRestaurant",value:function(e){return"./restaurant.html?id="+e.id}},{key:"imageUrlForRestaurant",value:function(e,t){return e.photograph?"/img/"+e.photograph+".webp":"#"}},{key:"nameForRestaurant",value:function(e){return""+e.name}},{key:"mapMarkerForRestaurant",value:function(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:i.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}},{key:"updateFavoriteStatus",value:function(n,r){fetch("http://localhost:1337/restaurants/"+n+"/?is_favorite="+r,{method:"PUT"}).then(function(){i.openDatabase().then(function(e){var t=e.transaction("restaurants","readwrite").objectStore("restaurants");t.get(n).then(function(e){e.is_favorite=r,t.put(e)})})})}},{key:"addReview",value:function(e){var t={name:"addReview",data:e,object_type:"review"};if(navigator.onLine||"addReview"!==t.name){var n={name:e.name,rating:parseInt(e.rating),comments:e.comments,restaurant_id:e.id},r={method:"POST",body:JSON.stringify(n),headers:new Headers({"Content-Type":"application/json"})};fetch("http://localhost:1337/reviews",r).then(function(e){var t=e.headers.get("content-type");return t&&-1!==t.indexOf("application/json")?e.json():"API call successfull"}).then(function(e){console.log("fetch successfull")}).catch(function(e){return console.log(e)})}else i.sendDataWhenOnline(t)}},{key:"sendDataWhenOnline",value:function(n){localStorage.setItem("data",JSON.stringify(n.data)),window.addEventListener("online",function(e){var t=JSON.parse(localStorage.getItem("data"));[].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(document.querySelectorAll(".reviews_offline"))).forEach(function(e){e.classList.remove("reviews_offline"),e.querySelector(".offline_label").remove()}),null!==t&&("addReview"===n.name&&i.addReview(n.data),localStorage.removeItem("data"))})}},{key:"DATABASE_URL",get:function(){return"http://localhost:1337/restaurants"}}]),i}();window.initMap=function(){var e=document.getElementById("map-container"),t=document.createElement("button");t.innerHTML="Show Map",t.id="toggle_map",t.onclick=function(){"none"===document.getElementById("map").style.display&&(document.getElementById("map").style.display="block",document.getElementById("toggle_map").style.display="none")},e.appendChild(t),i(function(e,t){e?console.log(e):(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:t.latlng,scrollwheel:!1}),f(),o.mapMarkerForRestaurant(self.restaurant,self.map))})};var i=function(n){if(self.restaurant)n(null,self.restaurant);else{var e=m("id");if(e)o.fetchRestaurantById(e,function(e,t){console.log(t),(self.restaurant=t)&&(u(),n(null,t))});else{n("No restaurant id in URL",null)}}},u=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurant;document.getElementById("restaurant-name").innerHTML=e.name,document.getElementById("restaurant-address").innerHTML=e.address;var t=document.getElementById("restaurant-img");t.className="restaurant-img",t.alt="an image of "+o.nameForRestaurant(e)+" restaurant in "+e.neighborhood,t.src=o.imageUrlForRestaurant(e),document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&c(),s(e.id),d()},c=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurant.operating_hours,t=document.getElementById("restaurant-hours");for(var n in e){var r=document.createElement("tr"),a=document.createElement("td");a.innerHTML=n,r.appendChild(a);var o=document.createElement("td");o.innerHTML=e[n],r.appendChild(o),t.appendChild(r)}},s=function(e){o.fetchRestaurantReviews(e).then(function(e){var t=e,n=document.getElementById("reviews-container"),r=document.createElement("h2");if(r.innerHTML="Reviews",n.appendChild(r),!t){var a=document.createElement("p");return a.innerHTML="No reviews yet!",void n.appendChild(a)}var o=document.getElementById("reviews-list");t.forEach(function(e){o.appendChild(l(e))}),n.appendChild(o)})},l=function(e){var t=document.createElement("li");t.role="tree-item";var n=document.createElement("div");t.appendChild(n);var r=document.createElement("h3");r.innerHTML=e.name,r.className="name",r.setAttribute("tabindex","0"),n.appendChild(r);var a=document.createElement("p");a.innerHTML="Rating: "+e.rating,a.className="rating",a.setAttribute("tabindex","0"),t.appendChild(a);var o=document.createElement("p");return o.innerHTML=e.comments,t.appendChild(o),o.setAttribute("tabindex","0"),t.setAttribute("role","article"),t},d=function(){var e=document.getElementById("form-container"),t=document.createElement("form");t.id="review-form";var n=document.createElement("h2");n.innerHTML="Add Review",t.append(n);var r=document.createElement("br");t.append(r);var a=document.createElement("label");a.htmlFor="author_name",a.innerHTML="Your name:",t.append(a);var o=document.createElement("input");o.type="text",o.name="name",o.id="review-author",t.append(o);var i=document.createElement("br");t.append(i);var u=document.createElement("label");u.htmlFor="rating",u.innerHTML="Rating:",t.append(u);var c=document.createElement("select");c.name="rating",c.id="review-rating";for(var s=1;s<6;s++){var l=document.createElement("option");l.innerHTML=s,l.value=s,c.append(l)}t.append(c);var d=document.createElement("br");t.append(d);var f=document.createElement("label");f.htmlFor="comments",f.innerHTML="Comment:",t.append(f);var m=document.createElement("textarea");m.className="textarea",m.name="comments",m.id="review-comments",t.append(m);var p=document.createElement("br");t.append(p);var h=document.createElement("label");h.htmlFor="restaurant_id",h.innerHTML="restaurant id:",t.append(h);var v=document.createElement("input");v.className="resId",v.name="restaurant_id",v.id="restaurant_id",t.append(v);var y=document.createElement("br");t.append(y);var g=document.createElement("button");g.className="button",g.id="submitReview",g.innerHTML="Submit Review",g.onclick=b,t.append(g),e.appendChild(t)},f=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurant,t=document.getElementById("breadcrumb"),n=document.createElement("li");n.innerHTML=e.name,n.setAttribute("aria-current","page"),t.appendChild(n)},m=function(e,t){t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");var n=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)").exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null},b=function(){event.preventDefault();var e=document.getElementById("review-author").value,t=document.getElementById("review-rating").value,n=document.getElementById("review-comments").value,r=document.getElementById("restaurant_id").value,a={id:r,rating:t,name:e,comments:n,createdAt:new Date};o.addReview(a),p(a),document.getElementById("review-form").reset()},p=function(e){var t=document.getElementById("reviews-list"),n=document.createElement("li");n.role="tree-item";var r=document.createElement("div");if(n.appendChild(r),!navigator.onLine){var a=document.createElement("p");a.classList.add("offline_label"),a.innerHTML="Offline",n.classList.add("reviews_offline"),n.appendChild(a)}var o=document.createElement("h3");o.innerHTML=e.name,o.className="name",o.setAttribute("tabindex","0"),r.appendChild(o);var i=document.createElement("p");i.innerHTML=e.date,i.className="date",i.setAttribute("tabindex","0"),r.appendChild(i);var u=document.createElement("p");u.innerHTML="Rating: "+e.rating,u.className="rating",u.setAttribute("tabindex","0"),n.appendChild(u);var c=document.createElement("p");c.innerHTML=e.comments,n.appendChild(c),c.setAttribute("tabindex","0"),n.setAttribute("role","article"),t.appendChild(n)};navigator.serviceWorker&&navigator.serviceWorker.register("/sw.js").then(function(){console.log("Registration worked!")}).catch(function(){console.log("Registration failed!")})},{idb:2}],2:[function(e,m,t){"use strict";!function(){function i(n){return new Promise(function(e,t){n.onsuccess=function(){e(n.result)},n.onerror=function(){t(n.error)}})}function o(n,r,a){var o,e=new Promise(function(e,t){i(o=n[r].apply(n,a)).then(e,t)});return e.request=o,e}function e(e,n,t){t.forEach(function(t){Object.defineProperty(e.prototype,t,{get:function(){return this[n][t]},set:function(e){this[n][t]=e}})})}function t(t,n,r,e){e.forEach(function(e){e in r.prototype&&(t.prototype[e]=function(){return o(this[n],e,arguments)})})}function n(t,n,r,e){e.forEach(function(e){e in r.prototype&&(t.prototype[e]=function(){return this[n][e].apply(this[n],arguments)})})}function r(e,r,t,n){n.forEach(function(n){n in t.prototype&&(e.prototype[n]=function(){return e=this[r],(t=o(e,n,arguments)).then(function(e){if(e)return new u(e,t.request)});var e,t})})}function a(e){this._index=e}function u(e,t){this._cursor=e,this._request=t}function c(e){this._store=e}function s(n){this._tx=n,this.complete=new Promise(function(e,t){n.oncomplete=function(){e()},n.onerror=function(){t(n.error)},n.onabort=function(){t(n.error)}})}function l(e,t,n){this._db=e,this.oldVersion=t,this.transaction=new s(n)}function d(e){this._db=e}e(a,"_index",["name","keyPath","multiEntry","unique"]),t(a,"_index",IDBIndex,["get","getKey","getAll","getAllKeys","count"]),r(a,"_index",IDBIndex,["openCursor","openKeyCursor"]),e(u,"_cursor",["direction","key","primaryKey","value"]),t(u,"_cursor",IDBCursor,["update","delete"]),["advance","continue","continuePrimaryKey"].forEach(function(n){n in IDBCursor.prototype&&(u.prototype[n]=function(){var t=this,e=arguments;return Promise.resolve().then(function(){return t._cursor[n].apply(t._cursor,e),i(t._request).then(function(e){if(e)return new u(e,t._request)})})})}),c.prototype.createIndex=function(){return new a(this._store.createIndex.apply(this._store,arguments))},c.prototype.index=function(){return new a(this._store.index.apply(this._store,arguments))},e(c,"_store",["name","keyPath","indexNames","autoIncrement"]),t(c,"_store",IDBObjectStore,["put","add","delete","clear","get","getAll","getKey","getAllKeys","count"]),r(c,"_store",IDBObjectStore,["openCursor","openKeyCursor"]),n(c,"_store",IDBObjectStore,["deleteIndex"]),s.prototype.objectStore=function(){return new c(this._tx.objectStore.apply(this._tx,arguments))},e(s,"_tx",["objectStoreNames","mode"]),n(s,"_tx",IDBTransaction,["abort"]),l.prototype.createObjectStore=function(){return new c(this._db.createObjectStore.apply(this._db,arguments))},e(l,"_db",["name","version","objectStoreNames"]),n(l,"_db",IDBDatabase,["deleteObjectStore","close"]),d.prototype.transaction=function(){return new s(this._db.transaction.apply(this._db,arguments))},e(d,"_db",["name","version","objectStoreNames"]),n(d,"_db",IDBDatabase,["close"]),["openCursor","openKeyCursor"].forEach(function(o){[c,a].forEach(function(e){o in e.prototype&&(e.prototype[o.replace("open","iterate")]=function(){var e,t=(e=arguments,Array.prototype.slice.call(e)),n=t[t.length-1],r=this._store||this._index,a=r[o].apply(r,t.slice(0,-1));a.onsuccess=function(){n(a.result)}})})}),[a,c].forEach(function(e){e.prototype.getAll||(e.prototype.getAll=function(e,n){var r=this,a=[];return new Promise(function(t){r.iterateCursor(e,function(e){e?(a.push(e.value),void 0===n||a.length!=n?e.continue():t(a)):t(a)})})})});var f={open:function(e,t,n){var r=o(indexedDB,"open",[e,t]),a=r.request;return a.onupgradeneeded=function(e){n&&n(new l(a.result,e.oldVersion,a.transaction))},r.then(function(e){return new d(e)})},delete:function(e){return o(indexedDB,"deleteDatabase",[e])}};void 0!==m?(m.exports=f,m.exports.default=m.exports):self.idb=f}()},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
